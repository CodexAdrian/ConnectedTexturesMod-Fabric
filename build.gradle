plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
sourceSets {
	testmod {
		compileClasspath += sourceSets.testmod.compileClasspath
		runtimeClasspath += sourceSets.testmod.runtimeClasspath
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

repositories {
	maven {
		url = "https://maven.terraformersmc.com/"
	}
}

loom {
	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
	}
}

dependencies {
	// to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly("com.terraformersmc:modmenu:${project.mod_menu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	afterEvaluate {
		testmodImplementation sourceSets.main.output
	}
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

def mavenUsername = project.findProperty('mavenUserName')
def mavenPassword = project.findProperty('mavenPassword')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact remapJar
			artifact remapSourcesJar

			pom {
				name = "CTM Refabricated"
				description = "An unofficial port of an unofficial port of CTM"
				url = "https://github.com/CodexAdrian/ConnectedTexturesMod-Fabric"

				scm {
					connection = "git:https://github.com/CodexAdrian/ConnectedTexturesMod-Fabric.git"
					developerConnection = "git:https://github.com/CodexAdrian/ConnectedTexturesMod-Fabric.git"
					url = "https://github.com/CodexAdrian/ConnectedTexturesMod-Fabric"
				}

				licenses {
					license {
						name = "GNU General Public License v2.0"
						url = "https://github.com/CodexAdrian/ConnectedTexturesMod-Fabric/blob/1.17/LICENSE"
					}
				}

				developers {
					developer {
						id="codexadrian"
						name="CodexAdrian"
						roles=["Developer"]
						email="adrian@terrarium.earth"
					}
				}
			}
		}
	}
	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		maven {
			url = "https://nexus.resourcefulbees.com/repository/codexadrian"
			credentials {
				username = mavenUsername
				password = mavenPassword
			}
		}
	}
}